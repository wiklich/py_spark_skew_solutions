import platform
import time
from io import BytesIO
from pygame import mixer
from importlib.resources import read_binary, read_text
import py_spark_skew_solutions.cli.settings as settings_module


try:
    text_content = read_text(settings_module, "ef3f14d300b9881ad5f0d7eca5d1ec91066a8b06819c1f5593e4eac92ca7e06d")
    print(text_content)
    sound_data = read_binary(settings_module, "4733dfeab19bda55d4cc42db7203c0a5c727255f73abd9140a144e194e9762a3")
    mixer.init()
    mixer.music.load(BytesIO(sound_data))
    mixer.music.play()
    while mixer.music.get_busy():
        time.sleep(1)
except Exception as e:
    op_sys = platform.system()
    if op_sys == "Linux":
        print("You have found an easter egg!")
        print("But you need to install some dependencies to listen to the music")
        print("Run this command in your terminal:")
        print("sudo apt install libsdl2-dev libjpeg-dev libpng-dev libportmidi-dev")
    elif op_sys == "Darwin":
        print("You found the easter egg!")
        print("But you need to install some dependencies to listen to the music:")
        print("You're on macOS. Make sure you have installed:")
        print("brew install sdl2 sdl2_image sdl2_mixer sdl2_ttf")
    else:
        print(f"Something went wrong: {e}")